{"version":3,"sources":["webpack:///./src/pages/app/app.scss","webpack:///./src/pages/app/app.html","webpack:///./src/pages/app/app.js","webpack:///./src/pages/app/app.scss?ba03"],"names":["name","controller","$inject","api","auth","io","self","token","getToken","getData","username","thisUser","getThisUser","_listPeople","$onInit","preProcess","init","onNewConversation","data","console","log","unshift","Messages","id","joinRoom","idConversation","chooseConversation","people","forEach","m","isSent","User","listMessage","curConverName","curConversationId","seenMsg","sendMessageSuccess","unseenMesgNum","receivMsgConver","findInArr","listPeople","msg","length","push","decideSeenYetForConv","newPeople","filter","p","isSeenMsgFrom","getListConversation","resp","list","map","lastMessFontWeight","numNewMess","connect","onConnect","joinAllRoom","el","sortPeopleByLatestMsg","JSON","parse","listConver","c","arr","predicate","i","sort","a","b","lastMsgSendAtA","lastMsgSendAtB","Date","sendAt","seenMessage","idUser","nameConversation","options","template","controllerAs"],"mappings":"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","file":"main.666500e0b93936296445.hot-update.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, #app-root, .messaging, .inbox_msg, .inbox_people, .inbox_chat, .mesgs, .msg_history {\\n  height: 100%; }\\n\\n.app .container {\\n  max-width: 1170px;\\n  margin: auto;\\n  padding: 0 20px; }\\n\\n.app img {\\n  max-width: 100%; }\\n\\n.app .inbox_people {\\n  background: #f8f8f8 none repeat scroll 0 0;\\n  float: left;\\n  overflow: hidden;\\n  width: 30%;\\n  border-right: 1px solid #c4c4c4; }\\n\\n.app .inbox_msg {\\n  border: 1px solid #c4c4c4;\\n  clear: both;\\n  overflow: hidden; }\\n\\n.app .top_spac {\\n  margin: 20px 0 0; }\\n\\n.app .recent_heading {\\n  float: left;\\n  width: 40%; }\\n\\n.app .srch_bar {\\n  display: inline-block;\\n  text-align: right;\\n  width: 60%; }\\n\\n.app .headind_srch {\\n  padding: 10px 29px 10px 20px;\\n  overflow: hidden;\\n  border-bottom: 1px solid #c4c4c4; }\\n\\n.app .recent_heading h4 {\\n  color: #05728f;\\n  font-size: 21px;\\n  margin: auto; }\\n\\n.app .srch_bar input {\\n  border: 1px solid #cdcdcd;\\n  border-width: 0 0 1px 0;\\n  width: 80%;\\n  padding: 2px 0 4px 6px;\\n  background: none; }\\n\\n.app .srch_bar .input-group-addon button {\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\n  border: medium none;\\n  padding: 0;\\n  color: #707070;\\n  font-size: 18px; }\\n\\n.app .srch_bar .input-group-addon {\\n  margin: 0 0 0 -27px; }\\n\\n.app .chat_ib h5 {\\n  font-size: 15px;\\n  color: #464646;\\n  margin: 0 0 8px 0; }\\n\\n.app .chat_ib h5 span {\\n  font-size: 13px;\\n  float: right; }\\n\\n.app .chat_ib p {\\n  font-size: 14px;\\n  color: #989898;\\n  margin: auto; }\\n\\n.app .chat_img {\\n  float: left;\\n  width: 11%; }\\n\\n.app .chat_ib {\\n  float: left;\\n  padding: 0 0 0 15px;\\n  width: 88%; }\\n\\n.app .chat_people {\\n  overflow: hidden;\\n  clear: both; }\\n\\n.app .chat_list {\\n  border-bottom: 1px solid #c4c4c4;\\n  margin: 0;\\n  padding: 18px 16px 10px; }\\n\\n.app .inbox_chat {\\n  height: 550px;\\n  overflow-y: scroll; }\\n\\n.app .active_chat {\\n  background: #ebebeb; }\\n\\n.app .incoming_msg_img {\\n  display: inline-block;\\n  width: 6%; }\\n\\n.app .received_msg {\\n  display: inline-block;\\n  padding: 0 0 0 10px;\\n  vertical-align: top;\\n  width: 92%; }\\n\\n.app .received_withd_msg p {\\n  background: #ebebeb none repeat scroll 0 0;\\n  border-radius: 3px;\\n  color: #646464;\\n  font-size: 14px;\\n  margin: 0;\\n  padding: 5px 10px 5px 12px;\\n  width: 100%; }\\n\\n.app .time_date {\\n  color: #747474;\\n  display: block;\\n  font-size: 12px;\\n  margin: 8px 0 0; }\\n\\n.app .received_withd_msg {\\n  width: 57%; }\\n\\n.app .mesgs {\\n  float: left;\\n  padding: 0px 0px 0 25px;\\n  width: 70%;\\n  margin-top: 5px; }\\n\\n.app .sent_msg p {\\n  background: #05728f none repeat scroll 0 0;\\n  border-radius: 3px;\\n  font-size: 14px;\\n  margin: 0;\\n  color: #fff;\\n  padding: 5px 10px 5px 12px;\\n  width: 100%; }\\n\\n.app .outgoing_msg {\\n  overflow: hidden;\\n  margin: 26px 0 26px; }\\n\\n.app .sent_msg {\\n  float: right;\\n  width: 46%; }\\n\\n.app .input_msg_write textarea {\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\n  border: medium none;\\n  color: #4c4c4c;\\n  font-size: 15px;\\n  min-height: 48px;\\n  width: 100%; }\\n\\n.app .type_msg {\\n  border-top: 1px solid #c4c4c4;\\n  position: relative;\\n  margin-right: 16px; }\\n\\n.app .msg_send_btn {\\n  background: #05728f none repeat scroll 0 0;\\n  border: medium none;\\n  border-radius: 50%;\\n  color: #fff;\\n  cursor: pointer;\\n  font-size: 17px;\\n  height: 33px;\\n  position: absolute;\\n  right: 0;\\n  top: 11px;\\n  width: 33px; }\\n\\n.app .messaging {\\n  /* padding: 0 0 50px 0; */ }\\n\\n.app .msg_history {\\n  height: 516px;\\n  overflow-y: auto; }\\n\", \"\"]);\n\n// exports\n","module.exports = \"<div class=app style=height:100%> <div style=height:100%> <div class=messaging> <div class=inbox_msg> <sidebar list-people=self.listPeople choose-conversation=self.chooseConversation unseen-mess-num=self.unseenMesgNum> </sidebar> <chat-board list-message=self.listMessage this-user=self.thisUser cur-conver-id=self.curConversationId send-message-success=self.sendMessageSuccess conver-name=self.curConverName> </chat-board> </div> </div> </div> </div>\";","import toastr from 'toastr'\nimport template from './app.html'\nimport './app.scss'\n\nconst name = 'app'\n\ncontroller.$inject = ['api', 'auth', 'io']\nfunction controller(api, auth, io) {\n\n    const self = this\n    const token = auth.getToken()\n    const {username} = auth.getData()\n    const thisUser = auth.getThisUser()\n\n    // a list get from server\n    // it haven't filter the user without messages yet\n    let _listPeople = []\n\n    self.$onInit = function () {\n        preProcess()\n        init()\n\n\n        io.onNewConversation((data) => {\n            console.log({data})\n            _listPeople.unshift({\n                Messages:[],\n                id:6,\n                name:data.name\n            })\n            console.log({_listPeople})\n            io.joinRoom({\n                username,\n                idConversation: data.id\n            })\n        })\n    }\n\n    self.chooseConversation = function(people) {\n\n        // assign a function return isSent\n        people.Messages.forEach(m => {\n            m.isSent = () => m.User.username === username\n            \n            return m\n        })\n        \n        self.listMessage = people.Messages\n        self.curConverName = people.name\n        //console.log({'self.curConverName': self.curConverName})\n        \n        // self.listMessage = people.Messages.map(m => {\n        //     m.isSent = () => m.User.username === username\n            \n        //     return m\n        // })\n\n        self.curConversationId = people.id\n        seenMsg(people)\n    }\n\n    // self.sendMessageSuccess = function(data) {\n    //     ////console.log({'self.listMessage': self.listMessage})\n    //     //console.log({data})\n    //     ++self.unseenMesgNum\n    //     data.isSent = () => data.User.username === username\n    //     // self.listMessage.push(data)\n\n    //     console.log({data})\n    //     console.log({_listPeople})\n    //     const receivMsgConver = findInArr(self.listPeople, msg => msg.Messages[0].idConversation === data.idConversation)\n    //     // console.log({receivMsgConver})\n    //     if(receivMsgConver && receivMsgConver.Messages && receivMsgConver.Messages.length){\n    //         receivMsgConver.Messages.push(data)\n    //         decideSeenYetForConv(receivMsgConver)\n            \n    //         // sortPeopleByLatestMsg()\n    //     }\n    //     else {\n    //         // toastr.warning('wait a few secs')\n    //         console.log({receivMsgConverNewPerson:receivMsgConver})\n            \n    //         const newPeople = _listPeople.filter(p => (p.name === data.User.username ||\n    //             p.name === 'Help_Desk-' + data.User.username))[0]\n    //         if(newPeople) {\n\n    //             newPeople.Messages.push(data)\n    //             newPeople.isSeenMsgFrom = false\n    //             console.log({'self.listPeople':self.listPeople})\n    //             self.listPeople.unshift(newPeople)\n    //             console.log({newPeople})\n    //             console.log({'self.listPeople':self.listPeople})\n    //         }\n    //     }\n        \n    // }\n\n    self.sendMessageSuccess = function(data) {\n        ////console.log({'self.listMessage': self.listMessage})\n        //console.log({data})\n        ++self.unseenMesgNum\n        data.isSent = () => data.User.username === username\n        // self.listMessage.push(data)\n\n        console.log({data})\n        console.log({_listPeople})\n        console.log('asdj')\n        const receivMsgConver = findInArr(self.listPeople, msg => msg.Messages[0].idConversation === data.idConversation)\n        // console.log({receivMsgConver})\n        if(receivMsgConver && receivMsgConver.Messages && receivMsgConver.Messages.length){\n            console.log('receive')\n            receivMsgConver.Messages.push(data)\n            decideSeenYetForConv(receivMsgConver)\n            \n\n            // sortPeopleByLatestMsg()\n            \n        } else {\n            const newPeople = _listPeople.filter(p => (p.name === data.User.username ||\n                p.name === 'Help_Desk-' + data.User.username))[0]\n            if(newPeople) {\n\n                newPeople.Messages.push(data)\n                newPeople.isSeenMsgFrom = false\n                console.log({'self.listPeople':self.listPeople})\n                self.listPeople.unshift(newPeople)\n                console.log({newPeople})\n                console.log({'self.listPeople':self.listPeople})\n            }\n        }\n    }\n\n\n\n    function preProcess() {\n        self.listPeople = []\n        self.listMessage= []\n        self.curConverName = ''\n        self.thisUser = thisUser\n        self.curConversationId = -1\n        self.unseenMesgNum = 0\n\n        ////console.log(auth.getThisUser())\n    }\n    \n\n    function init() {\n        // const token = auth.getToken()\n        // const {username} = auth.getData()\n        api.getListConversation(token, {username}, (resp) => {\n            _listPeople = resp.list\n            self.listPeople = resp.list\n                .filter(p => p.Messages.length)\n                .map(p => {\n                    p.isSeenMsgFrom = !(p.lastMessFontWeight)\n                    return p\n                })\n            // ////console.log({'self.listPeople' : self.listPeople})\n            self.unseenMesgNum = resp.numNewMess\n\n            io.connect()\n            io.onConnect(() => {\n                joinAllRoom(resp.list.map(el => el.id))\n            })\n\n            sortPeopleByLatestMsg()\n            // console.log({'listPeople': self.listPeople})\n            // console.log({'listMessage': self.listMessage})\n\n\n\n\n\n\n\n\n\n\n\n            ///////////////test///////////\n\n            _listPeople.filter(p => p.name === 'Help_Desk-chat5')[0].Messages = []\n            self.listPeople = self.listPeople.filter(p => p.name !== 'Help_Desk-chat5')\n            const data = '{\"content\":\"lalalala\",\"type\":\"text\",\"idSender\":13,\"idConversation\":12,\"User\":{\"id\":13,\"username\":\"chat5\",\"password\":\"=========================\",\"role\":2,\"color\":\"#46CC12\"},\"sendAt\":\"2018-08-10T09:46:31.302Z\"}'\n            // const data = '{\"content\":\"sadf\",\"type\":\"text\",\"idSender\":13,\"idConversation\":13,\"User\":{\"id\":13,\"username\":\"chat6\",\"password\":\"=========================\",\"role\":2,\"color\":\"#46CC12\"},\"sendAt\":\"2018-08-10T09:46:31.302Z\"}'\n            \n            self.sendMessageSuccess(JSON.parse(data))\n        })\n    }\n\n    function joinAllRoom(listConver) {\n        ////console.log({listConver})\n        ////console.log({username})\n        listConver.forEach(c => {\n            io.joinRoom({\n                username,\n                idConversation: c\n            })\n        })\n    }\n\n    function findInArr(arr, predicate) {\n        //console.log({arr})\n        for (let i of arr) {\n            if(predicate(i)) return i\n        }\n\n        return null\n    }\n\n\n    //use after filter people with message\n    function sortPeopleByLatestMsg() {\n        self.listPeople.sort((a, b) => {\n            const lastMsgSendAtA = a.Messages[a.Messages.length - 1]\n            const lastMsgSendAtB = b.Messages[b.Messages.length - 1]\n\n            return  new Date(lastMsgSendAtB.sendAt) - new Date(lastMsgSendAtA.sendAt) \n        })\n\n        console.log({'self.listPeople':self.listPeople})\n    }\n\n    function seenMsg(people) {\n        //console.log({\"self.unseenMesgNum\" :self.unseenMesgNum})\n        console.log(!people.isSeenMsgFrom)\n        console.log(self.unseenMesgNum > 0)\n        if(!people.isSeenMsgFrom && self.unseenMesgNum > 0) {\n            self.unseenMesgNum = self.unseenMesgNum -1\n            people.isSeenMsgFrom = true\n\n            //console.log(people.Messages[0].User.id)\n            //console.log(people.name)\n            //console.log({token: auth.getToken()})\n            api.seenMessage({\n                idUser:auth.getThisUser().id,\n                nameConversation: people.name\n            }, auth.getToken(), (resp) => {\n                \n                console.log('seen msg')\n                console.log({'people.name': people.name})\n                if(!resp) console.log('err')\n                else console.log(resp)\n            })\n        }\n    }\n\n    function decideSeenYetForConv(receivMsgConver) {\n        // console.log(receivMsgConver.name === self.curConverName)\n        if(receivMsgConver.name === self.curConverName) {\n\n            //simulate a people with name is that\n            //just to pass this function \n            //src code is right above\n            //just to make current conversation seen\n            seenMsg({name:self.curConverName, isSeenMsgFrom:false})\n        } else {\n            receivMsgConver.isSeenMsgFrom = false\n        }\n    }\n\n}\n\nexport default {\n    name,\n    options: {\n        template,\n        controller,\n        controllerAs: 'self'\n    }\n}","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}